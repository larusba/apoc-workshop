{
  "paragraphs": [
    {
      "text": "%md\n\n# Refactor data\n\nThe APOC library has a set of procedures that can be used to adjust data structure and values across parts or the entirety of the graph. \nWe will look at some of these of these procedures.\n\nThe complete list is \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.1/overview/apoc.refactor/\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.343",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eRefactor data\u003c/h1\u003e\n\u003cp\u003eThe APOC library has a set of procedures that can be used to adjust data structure and values across parts or the entirety of the graph.\u003cbr /\u003e\nWe will look at some of these of these procedures.\u003c/p\u003e\n\u003cp\u003eThe complete list is \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.1/overview/apoc.refactor/\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229343_496768273",
      "id": "paragraph_1635348036359_2131776212",
      "dateCreated": "2021-11-11 13:43:49.343",
      "status": "READY"
    },
    {
      "text": "%md\n\n### Invert relationships\n\nWe can quickly invert a relationship with a `CALL apoc.refactor.invert(rel)`, where `rel` is the relationship to be inverted.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.343",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eInvert relationships\u003c/h3\u003e\n\u003cp\u003eWe can quickly invert a relationship with a \u003ccode\u003eCALL apoc.refactor.invert(rel)\u003c/code\u003e, where \u003ccode\u003erel\u003c/code\u003e is the relationship to be inverted.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229343_2023858203",
      "id": "paragraph_1635348071412_1417491836",
      "dateCreated": "2021-11-11 13:43:49.343",
      "status": "READY"
    },
    {
      "title": "apoc.refactor.invert",
      "text": "%neo4j\n\nMATCH (p:Person {name: \u0027Al Pacino\u0027})-[rel:ACTED_IN]-\u003e(c:Movie)\nCALL apoc.refactor.invert(rel) YIELD output\nRETURN p, output, c",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "born": "string",
                      "roles": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229343_1631994582",
      "id": "paragraph_1635512346388_400316643",
      "dateCreated": "2021-11-11 13:43:49.343",
      "status": "READY"
    },
    {
      "text": "%md\n\n### Renaming\n\nWe can rename relationships with the `apoc.refactor.rename.type(oldType, newType, [rels])`,\nto rename all relationships with type `oldType` to `newType`. `rels` is optional, can be a list of relationships to apply the refactor to.\n\nFormat: apoc.refactor.rename.type(oldType, newType, `[rels]`)\n\n\nWith the same logic we have:\n- `CALL apoc.refactor.rename.label(oldLabel, newLabel, [nodes])`\n- `CALL apoc.refactor.rename.nodeProperty(oldName, newName, [nodes])`\n- `CALL apoc.refactor.rename.typeProperty(oldName, newName, [rels])`\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eRenaming\u003c/h3\u003e\n\u003cp\u003eWe can rename relationships with the \u003ccode\u003eapoc.refactor.rename.type(oldType, newType, [rels])\u003c/code\u003e,\u003cbr /\u003e\nto rename all relationships with type \u003ccode\u003eoldType\u003c/code\u003e to \u003ccode\u003enewType\u003c/code\u003e. \u003ccode\u003erels\u003c/code\u003e is optional, can be a list of relationships to apply the refactor to.\u003c/p\u003e\n\u003cp\u003eFormat: apoc.refactor.rename.type(oldType, newType, \u003ccode\u003e[rels]\u003c/code\u003e)\u003c/p\u003e\n\u003cp\u003eWith the same logic we have:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.refactor.rename.label(oldLabel, newLabel, [nodes])\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.refactor.rename.nodeProperty(oldName, newName, [nodes])\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCALL apoc.refactor.rename.typeProperty(oldName, newName, [rels])\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_1459512296",
      "id": "paragraph_1635348082297_1111714116",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "title": "apoc.refactor.rename.type",
      "text": "%neo4j\n\nMATCH path\u003d(p:Person {name: \u0027Al Pacino\u0027})-[rel:ACTED_IN]-(c:Movie) \nCALL apoc.refactor.rename.type(\"ACTED_IN\", \"NEW_REL\", [rel]) YIELD total\nWITH p,c\nMATCH path\u003d(p)--(c)\nRETURN path;",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "tagline": "string",
                      "title": "string",
                      "released": "string",
                      "name": "string",
                      "born": "string",
                      "roles": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":41,\"data\":{\"tagline\":\"Evil has its winning ways\",\"title\":\"The Devil\\u0027s Advocate\",\"released\":1997},\"label\":\"Movie\"},{\"id\":43,\"data\":{\"name\":\"Al Pacino\",\"born\":1940},\"label\":\"Person\"}],\"edges\":[{\"source\":43,\"target\":41,\"id\":274,\"data\":{\"roles\":[\"John Milton\"]},\"label\":\"ACTED_IN\"}],\"labels\":{\"TTL\":\"#2EC610\",\"NodeWithUnique\":\"#B8C858\",\"Person\":\"#F229BB\",\"Company\":\"#F4C50F\",\"Car\":\"#00123F\",\"Animal\":\"#D0B639\",\"Cat\":\"#6AC79B\",\"City\":\"#56B1BC\",\"MergeOne\":\"#15FFE2\",\"Movie\":\"#7A535E\"},\"types\":[\"ACTED_IN\",\"REVIEWED\",\"PRODUCED\",\"WROTE\",\"HAS_HQ\",\"FOLLOWS\",\"DIRECTED\",\"WORKS_FOR\",\"HAS\",\"DRIVE\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_1410484524",
      "id": "paragraph_1636490164902_947450098",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "text": "%md\n\n### Grouping nodes into categories\n\nTo transform a unique property key of a target node into a new node and connect target and new node.\n\n\n`CALL apoc.refactor.categorize(sourceKey, type, outgoing, label, targetKey, copiedKeys, batchSize)`\n\n\nThe parameters are:\n\n- `sourceKey`: the property on the existing node we want to use to create the new node\n- `type`: the type for the new relationship for connecting the existing node to the new node\n- `outgoing`: whether the relationship is outgoing or not\n- `label`: the label for the new node\n- `targetKey`: the key property name we want on the new node\n- `copiedKeys`: any additional properties we’d like copied from the old node to the new\n- `batchSize`\n\n\u003cpre\u003e\nBefore we can execute this procedure, we need to put a constraint on the new node and property key.\n\u003c/pre\u003e\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eGrouping nodes into categories\u003c/h3\u003e\n\u003cp\u003eTo transform a unique property key of a target node into a new node and connect target and new node.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eCALL apoc.refactor.categorize(sourceKey, type, outgoing, label, targetKey, copiedKeys, batchSize)\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThe parameters are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003esourceKey\u003c/code\u003e: the property on the existing node we want to use to create the new node\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etype\u003c/code\u003e: the type for the new relationship for connecting the existing node to the new node\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eoutgoing\u003c/code\u003e: whether the relationship is outgoing or not\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elabel\u003c/code\u003e: the label for the new node\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etargetKey\u003c/code\u003e: the key property name we want on the new node\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecopiedKeys\u003c/code\u003e: any additional properties we’d like copied from the old node to the new\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebatchSize\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\nBefore we can execute this procedure, we need to put a constraint on the new node and property key.\n\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_601187783",
      "id": "paragraph_1635348112816_1621294288",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "title": "apoc.refactor.categorize",
      "text": "%neo4j\n\nCREATE CONSTRAINT ON (n:`TagLine`) ASSERT n.`name` IS UNIQUE;\n\nCALL apoc.refactor.categorize(\u0027tagline\u0027, \n    \u0027HAS_TAGLINE\u0027, \n    true, \n    \"TagLine\", \n    \"name\", \n    [\"released\"], \n    100);\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_1193431304",
      "id": "paragraph_1636492769374_1747537371",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "title": "Check results",
      "text": "%neo4j\n\nMATCH p\u003d(n)-[:HAS_TAGLINE]-()\nRETURN p;\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "title": "string",
                      "name": "string",
                      "released": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_700570601",
      "id": "paragraph_1636492841631_775451986",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "text": "%md\n### Move relationships to other nodes\n\nI can move a `rel` to another `endNode` using the `apoc.refactor.to(rel, endNode)` procedure.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003d\u003d Refactor relationships to other nodes\u003c/p\u003e\n\u003cp\u003eTaking refactoring to the next level, we may want to change existing structure of our graph to represent the idea that customers purchase products, rather than orders. So, instead of having Customer PURCHASED Order, as we do now, it could be that Customer PURCHASED Product. This could help us see more easily which products are most popular or prioritize stocking of products that larger customers rely upon.\u003c/p\u003e\n\u003cp\u003eThe apoc.refactor.to procedure can help us do that.\u003c/p\u003e\n\u003cp\u003eFormat: apoc.refactor.to(relationship, endNode)\u003c/p\u003e\n\u003cp\u003eThe procedure has 2 parameters -\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ethe relationship that we want to change\n\nthe node where we want the relationship to go\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003d\u003d apoc.refactor.to Example:\u003c/p\u003e\n\u003cp\u003eWe can alter where the PURCHASED relationship goes with the APOC code below.\u003c/p\u003e\n\u003cp\u003eMATCH (c:Customer)-[rel:PURCHASED]-(o:Order)-[rel2:ORDERS]-(p:Product)\u003cbr /\u003e\nCALL apoc.refactor.to(rel, p) YIELD output\u003cbr /\u003e\nRETURN output\u003c/p\u003e\n\u003cp\u003eFor verification, we can retrieve some customers and related entities to see that now Customer nodes are connected to Product nodes directly with a PURCHASED relationship.\u003c/p\u003e\n\u003cp\u003eMATCH (c:Customer)-[rel]-(other)\u003cbr /\u003e\nRETURN c, rel, other LIMIT 50\u003c/p\u003e\n\u003cp\u003eWith this new structure, we can run queries to see how many different products a customer has purchased, how many products within specific categories, and most similar customers (based on products in common) without going through the Order nodes to find this information.\u003c/p\u003e\n\u003cp\u003eNote: We have also diluted our order tracking where we no longer can easily tell which orders a specific customer made. Refactoring may make some queries easier, but others more complex. Impacts of changes should be evaluated.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_478238819",
      "id": "paragraph_1635348117637_648932751",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "title": "Dataset creation",
      "text": "%neo4j\nCREATE (person1:Person {name: \"Ryu\"})-[:FRIENDS]-\u003e(person2:Person {name: \"Ken\"})\nCREATE (person3:Person {name: \"Vega\"})",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_622877547",
      "id": "paragraph_1636493197463_663515208",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "title": "apoc.refactor.to",
      "text": "%neo4j\n\nMATCH (:Person {name: \"Ryu\"})-[rel:FRIENDS]-\u003e(:Person {name: \"Ken\"})\nMATCH (vega:Person {name: \"Vega\"})\nCALL apoc.refactor.to(rel, vega)\nYIELD input, output\nMATCH path\u003d(vega)--()\nRETURN path",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_1067741608",
      "id": "paragraph_1636493214206_391080068",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "text": "%md\n\n### Merge multiple relationships / nodes\n\nWe can join multiple entities through the procedures\n\n- apoc.refactor.mergeRelationships([rels], $config)\n- apoc.refactor.mergeRelationships([nodes], $config)\n\nWhere `$config` can have:\n- properties (default: \u0027combine\u0027): Map\u003cprop, type\u003e or type, where type can be discard (to take 1st property value found with the same name), overwrite (to pick last prop value), combine (to join properties in an array)\n- mergeRels (default: false) - only for `apoc.refactor.mergeNodes`\n- singleElementAsArray (default: false)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eMerge multiple relationships / nodes\u003c/h3\u003e\n\u003cp\u003eWe can join multiple entities through the procedures\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eapoc.refactor.mergeRelationships([rels], $config)\u003c/li\u003e\n\u003cli\u003eapoc.refactor.mergeRelationships([nodes], $config)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhere \u003ccode\u003e$config\u003c/code\u003e can have:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eproperties (default: \u0026lsquo;combine\u0026rsquo;): Map\u0026lt;prop, type\u0026gt; or type, where type can be discard (to take 1st property value found with the same name), overwrite (to pick last prop value), combine (to join properties in an array)\u003c/li\u003e\n\u003cli\u003emergeRels (default: false) - only for \u003ccode\u003eapoc.refactor.mergeNodes\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003esingleElementAsArray (default: false)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_1674721722",
      "id": "paragraph_1636459119756_823886620",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "title": "†",
      "text": "%neo4j\n\nCREATE (n1:MergeOne {name:\u0027Tom\u0027, surname: \u0027Jerry\u0027}),\n(n2:MergeOne {name:\u0027John\u0027, surname: \u0027Jack\u0027}),\n(n3:Company {name:\u0027Company1\u0027}),\n(n5:Car {brand:\u0027Ferrari\u0027}),\n(n6:Animal:Cat {name:\u0027Derby\u0027}),\n(n7:City {name:\u0027London\u0027}),\n\n(n1)-[r1:WORKS_FOR {since:2015}]-\u003e(n3),\n(n2)-[r2:WORKS_FOR {since:2018}]-\u003e(n3),\n(n3)-[r3:HAS_HQ {since:2004}]-\u003e(n7),\n(n1)-[r4:DRIVE {since:2017}]-\u003e(n5),\n(n2)-[r5:HAS {since:2013}]-\u003e(n6)\nreturn *;",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 328.58,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "brand": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":1,\"data\":{\"name\":\"Tom\"},\"label\":\"MergeOne\"},{\"id\":22,\"data\":{\"name\":\"John\"},\"label\":\"MergeOne\"},{\"id\":27,\"data\":{\"name\":\"Company1\"},\"label\":\"Company\"},{\"id\":28,\"data\":{\"brand\":\"Ferrari\"},\"label\":\"Car\"},{\"id\":29,\"data\":{\"name\":\"Derby\"},\"label\":\"Animal\"},{\"id\":30,\"data\":{\"name\":\"London\"},\"label\":\"City\"}],\"edges\":[{\"source\":1,\"target\":27,\"id\":0,\"data\":{\"since\":2015},\"label\":\"WORKS_FOR\"},{\"source\":22,\"target\":27,\"id\":1,\"data\":{\"since\":2018},\"label\":\"WORKS_FOR\"},{\"source\":27,\"target\":30,\"id\":19,\"data\":{\"since\":2004},\"label\":\"HAS_HQ\"},{\"source\":1,\"target\":28,\"id\":20,\"data\":{\"since\":2017},\"label\":\"DRIVE\"},{\"source\":22,\"target\":29,\"id\":21,\"data\":{\"since\":2013},\"label\":\"HAS\"}],\"labels\":{\"TTL\":\"#2EC610\",\"NodeWithUnique\":\"#B8C858\",\"Person\":\"#F229BB\",\"Company\":\"#F4C50F\",\"Car\":\"#00123F\",\"Animal\":\"#D0B639\",\"Cat\":\"#6AC79B\",\"City\":\"#56B1BC\",\"MergeOne\":\"#15FFE2\"},\"types\":[\"HAS_HQ\",\"WORKS_FOR\",\"HAS\",\"DRIVE\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_1496276742",
      "id": "paragraph_1636458136545_2109617495",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "title": "apoc.refactor.mergeNodes",
      "text": "%neo4j\n\nMATCH p\u003d(a1:MergeOne{name:\u0027John\u0027})--(), p2\u003d(a2:MergeOne {name:\u0027Tom\u0027})--()\nWITH [a1,a2] as nodes\nCALL apoc.refactor.mergeNodes(nodes,{properties:\"combine\", mergeRels:true})\nYIELD node RETURN null",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.344",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 87.2443,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "null\nNULL\nNULL\nNULL\nNULL\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229344_1342621855",
      "id": "paragraph_1636458226521_1288066003",
      "dateCreated": "2021-11-11 13:43:49.344",
      "status": "READY"
    },
    {
      "title": "Check results",
      "text": "%neo4j\n\nMATCH p\u003d(a1:MergeOne)--()\nRETURN p",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.345",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 426.761,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "brand": "string",
                      "since": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":22,\"data\":{\"name\":[\"John\",\"Tom\"]},\"label\":\"MergeOne\"},{\"id\":27,\"data\":{\"name\":\"Company1\"},\"label\":\"Company\"},{\"id\":28,\"data\":{\"brand\":\"Ferrari\"},\"label\":\"Car\"},{\"id\":29,\"data\":{\"name\":\"Derby\"},\"label\":\"Animal\"}],\"edges\":[{\"source\":22,\"target\":29,\"id\":21,\"data\":{\"since\":2013},\"label\":\"HAS\"},{\"source\":22,\"target\":28,\"id\":22,\"data\":{\"since\":2017},\"label\":\"DRIVE\"},{\"source\":22,\"target\":27,\"id\":23,\"data\":{\"since\":[2015,2018]},\"label\":\"WORKS_FOR\"}],\"labels\":{\"TTL\":\"#2EC610\",\"NodeWithUnique\":\"#B8C858\",\"Person\":\"#F229BB\",\"Company\":\"#F4C50F\",\"Car\":\"#00123F\",\"Animal\":\"#D0B639\",\"Cat\":\"#6AC79B\",\"City\":\"#56B1BC\",\"MergeOne\":\"#15FFE2\"},\"types\":[\"HAS_HQ\",\"WORKS_FOR\",\"HAS\",\"DRIVE\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229345_911224170",
      "id": "paragraph_1636463994491_1659705378",
      "dateCreated": "2021-11-11 13:43:49.345",
      "status": "READY"
    },
    {
      "title": "Another dataset",
      "text": "%neo4j\n\nCREATE (n1:MergeTwo {name:\u0027Tom\u0027, surname: \u0027Jerry\u0027}),\n(n2:MergeTwo {name:\u0027John\u0027, surname: \u0027Jack\u0027}),\n(n3:Company {name:\u0027Company1\u0027}),\n(n5:Car {brand:\u0027Ferrari\u0027}),\n(n6:Animal:Cat {name:\u0027Derby\u0027}),\n(n7:City {name:\u0027London\u0027}),\n\n(n1)-[r1:WORKS_FOR {since:2015}]-\u003e(n3),\n(n2)-[r2:WORKS_FOR {since:2018}]-\u003e(n3),\n(n3)-[r3:HAS_HQ {since:2004}]-\u003e(n7),\n(n1)-[r4:DRIVE {since:2017}]-\u003e(n5),\n(n2)-[r5:HAS {since:2013}]-\u003e(n6)\nreturn *;",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.345",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "surname": "string",
                      "brand": "string",
                      "since": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":242,\"data\":{\"name\":\"Tom\",\"surname\":\"Jerry\"},\"label\":\"MergeTwo\"},{\"id\":243,\"data\":{\"name\":\"John\",\"surname\":\"Jack\"},\"label\":\"MergeTwo\"},{\"id\":244,\"data\":{\"name\":\"Company1\"},\"label\":\"Company\"},{\"id\":245,\"data\":{\"brand\":\"Ferrari\"},\"label\":\"Car\"},{\"id\":246,\"data\":{\"name\":\"Derby\"},\"label\":\"Animal\"},{\"id\":247,\"data\":{\"name\":\"London\"},\"label\":\"City\"}],\"edges\":[{\"source\":242,\"target\":244,\"id\":311,\"data\":{\"since\":2015},\"label\":\"WORKS_FOR\"},{\"source\":243,\"target\":244,\"id\":313,\"data\":{\"since\":2018},\"label\":\"WORKS_FOR\"},{\"source\":244,\"target\":247,\"id\":314,\"data\":{\"since\":2004},\"label\":\"HAS_HQ\"},{\"source\":242,\"target\":245,\"id\":315,\"data\":{\"since\":2017},\"label\":\"DRIVE\"},{\"source\":243,\"target\":246,\"id\":316,\"data\":{\"since\":2013},\"label\":\"HAS\"}],\"labels\":{\"TTL\":\"#2EC610\",\"NodeWithUnique\":\"#B8C858\",\"Person\":\"#F229BB\",\"Company\":\"#F4C50F\",\"Car\":\"#00123F\",\"Animal\":\"#D0B639\",\"Cat\":\"#6AC79B\",\"City\":\"#56B1BC\",\"MergeOne\":\"#15FFE2\",\"Movie\":\"#7A535E\",\"Genre\":\"#F1DFDE\",\"TagLine\":\"#E234BD\",\"MergeTwo\":\"#2A71FE\"},\"types\":[\"ACTED_IN\",\"REVIEWED\",\"FRIENDS\",\"PRODUCED\",\"WROTE\",\"HAS_HQ\",\"FOLLOWS\",\"DIRECTED\",\"WORKS_FOR\",\"HAS\",\"TAGLINE\",\"DRIVE\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229345_421098957",
      "id": "paragraph_1636458747902_1200537474",
      "dateCreated": "2021-11-11 13:43:49.345",
      "status": "READY"
    },
    {
      "title": "mergeNodes with \"discard\" configuration",
      "text": "%neo4j\n\nMATCH p\u003d(a1:MergeTwo{name:\u0027John\u0027})--(), p2\u003d(a2:MergeOne {name:\u0027Tom\u0027})--()\nWITH [a1,a2] as nodes\nCALL apoc.refactor.mergeNodes(nodes,{properties: {name: \"discard\", surname: \"overwrite\"}, mergeRels:true})\nYIELD node RETURN null",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.345",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229345_130606695",
      "id": "paragraph_1636532174097_1810713463",
      "dateCreated": "2021-11-11 13:43:49.345",
      "status": "READY"
    },
    {
      "title": "Check results",
      "text": "%neo4j\n\nMATCH p\u003d(a1:MergeTwo)--()\nRETURN p",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:43:49.345",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "name": "string",
                      "surname": "string",
                      "brand": "string",
                      "since": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":242,\"data\":{\"name\":\"Tom\",\"surname\":\"Jerry\"},\"label\":\"MergeTwo\"},{\"id\":243,\"data\":{\"name\":\"John\",\"surname\":\"Jack\"},\"label\":\"MergeTwo\"},{\"id\":244,\"data\":{\"name\":\"Company1\"},\"label\":\"Company\"},{\"id\":245,\"data\":{\"brand\":\"Ferrari\"},\"label\":\"Car\"},{\"id\":246,\"data\":{\"name\":\"Derby\"},\"label\":\"Animal\"}],\"edges\":[{\"source\":242,\"target\":244,\"id\":311,\"data\":{\"since\":2015},\"label\":\"WORKS_FOR\"},{\"source\":243,\"target\":244,\"id\":313,\"data\":{\"since\":2018},\"label\":\"WORKS_FOR\"},{\"source\":242,\"target\":245,\"id\":315,\"data\":{\"since\":2017},\"label\":\"DRIVE\"},{\"source\":243,\"target\":246,\"id\":316,\"data\":{\"since\":2013},\"label\":\"HAS\"}],\"labels\":{\"TTL\":\"#2EC610\",\"NodeWithUnique\":\"#B8C858\",\"Person\":\"#F229BB\",\"Company\":\"#F4C50F\",\"Car\":\"#00123F\",\"Animal\":\"#D0B639\",\"Cat\":\"#6AC79B\",\"City\":\"#56B1BC\",\"MergeOne\":\"#15FFE2\",\"Movie\":\"#7A535E\",\"Genre\":\"#F1DFDE\",\"TagLine\":\"#E234BD\",\"MergeTwo\":\"#2A71FE\"},\"types\":[\"ACTED_IN\",\"REVIEWED\",\"FRIENDS\",\"PRODUCED\",\"WROTE\",\"HAS_HQ\",\"FOLLOWS\",\"DIRECTED\",\"WORKS_FOR\",\"HAS\",\"TAGLINE\",\"DRIVE\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229345_387509672",
      "id": "paragraph_1636532214885_1158137498",
      "dateCreated": "2021-11-11 13:43:49.345",
      "status": "READY"
    },
    {
      "text": "%md\n\n## [Others](http://localhost:8080/#/notebook/2GKZ46UWK)",
      "user": "anonymous",
      "dateUpdated": "2021-11-11 13:51:16.080",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e\u003ca href\u003d\"http://localhost:8080/#/notebook/2GKZ46UWK\"\u003eOthers\u003c/a\u003e\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636638229345_169688469",
      "id": "paragraph_1636532228417_99296844",
      "dateCreated": "2021-11-11 13:43:49.345",
      "dateStarted": "2021-11-11 13:51:16.042",
      "dateFinished": "2021-11-11 13:51:16.091",
      "status": "FINISHED"
    }
  ],
  "name": "7. Refactor data",
  "id": "2GKED4THV",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}